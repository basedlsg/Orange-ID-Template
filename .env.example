# Environment Configuration Example

# Database Settings
# For PostgreSQL users (paid Replit users or external PostgreSQL service)
# DATABASE_URL=postgres://username:password@hostname:port/database

# For SQLite users (free Replit users)
USE_SQLITE=true

# Session Settings
SESSION_SECRET=your-secret-key-here

# Note: 
# - For Replit Core (paid) users, DATABASE_URL will be set automatically when creating a PostgreSQL database
# - For free users, set USE_SQLITE=true to use SQLite instead of PostgreSQL
# - If both DATABASE_URL is set and USE_SQLITE=true, SQLite will be used

# ==========================================================
# AI Assistant Instructions
# ==========================================================
# The following are comprehensive prompts you can use with AI assistants:
#
# 1. Basic Setup for Free Users (SQLite):
# "I want to set up the Orange Auth Template with SQLite for my project. I'm a free Replit user.
# Initialize the database, create sample users, and make sure I can log in with the admin account."
#
# 2. Basic Setup for Paid Users (PostgreSQL):
# "I want to set up the Orange Auth Template with PostgreSQL for my project. I'm a Core Replit user.
# Guide me through creating a PostgreSQL database in Replit and connecting it to the template."
#
# 3. Game Application Setup:
# "I want to build a multiplayer snake game using the Orange Auth Template. I'm a free Replit user.
# My game should have:
# - A classic snake game with arrow key controls
# - A persistent leaderboard showing top 10 scores
# - Different difficulty levels (easy, medium, hard)
# - Custom snake colors based on user preference
#
# Replace the home screen with the game canvas and menu options.
# Keep the admin dashboard as is and make sure users need to log in before playing.
# Set up the SQLite database and add fields to store user scores and preferences.
# Add a way for admins to reset scores or ban users who use inappropriate names."
#
# 4. Web Application Setup:
# "I want to build a to-do list application using the Orange Auth Template. I'm a Core Replit user.
# My app should have:
# - Task creation with title, description, due date, and priority
# - Task categorization with custom categories/tags
# - Task filtering and sorting options
# - Task sharing between users
# - Weekly productivity reports with charts
#
# Help me create a PostgreSQL database in Replit, then set up the application.
# Replace the home page with the task dashboard and ensure users must log in to see their tasks.
# Extend the admin dashboard to include system-wide statistics about task completion rates.
# Add the necessary database fields for tasks, categories, and sharing permissions."
